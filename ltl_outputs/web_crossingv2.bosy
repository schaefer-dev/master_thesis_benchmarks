{
  "outputs" : [
    "break",
    "go"
  ],
  "assumptions" : [
    "s0",
    "G ((s0) -> (((((((! (s1s2)) && (! (s3))) && (! (s4))) && (! (s5))) && (! (s6))) && (! (s7))) && (! (s8))))",
    "G ((s1s2) -> (((((((! (s0)) && (! (s3))) && (! (s4))) && (! (s5))) && (! (s6))) && (! (s7))) && (! (s8))))",
    "G ((s3) -> (((((((! (s0)) && (! (s1s2))) && (! (s4))) && (! (s5))) && (! (s6))) && (! (s7))) && (! (s8))))",
    "G ((s4) -> (((((((! (s0)) && (! (s1s2))) && (! (s3))) && (! (s5))) && (! (s6))) && (! (s7))) && (! (s8))))",
    "G ((s5) -> (((((((! (s0)) && (! (s1s2))) && (! (s3))) && (! (s4))) && (! (s6))) && (! (s7))) && (! (s8))))",
    "G ((s6) -> (((((((! (s0)) && (! (s1s2))) && (! (s3))) && (! (s4))) && (! (s5))) && (! (s7))) && (! (s8))))",
    "G ((s7) -> (((((((! (s0)) && (! (s1s2))) && (! (s3))) && (! (s4))) && (! (s5))) && (! (s6))) && (! (s8))))",
    "G ((s8) -> (((((((! (s0)) && (! (s1s2))) && (! (s3))) && (! (s4))) && (! (s5))) && (! (s6))) && (! (s7))))",
    "G ((((((((s0) || (s1s2)) || (s3)) || (s4)) || (s5)) || (s6)) || (s7)) || (s8))",
    "G ((s0) -> ((((drive) && (! (indicateLeft))) && (! (pastCrossing))) && (! (turnLeft))))",
    "G ((s1s2) -> ((((drive) && (! (indicateLeft))) && (! (pastCrossing))) && (! (turnLeft))))",
    "G ((s3) -> ((((drive) && (! (indicateLeft))) && (! (pastCrossing))) && (! (turnLeft))))",
    "G ((s4) -> ((((drive) && (indicateLeft)) && (! (pastCrossing))) && (! (turnLeft))))",
    "G ((s5) -> ((((drive) && (! (indicateLeft))) && (! (pastCrossing))) && (! (turnLeft))))",
    "G ((s6) -> ((((drive) && (indicateLeft)) && (! (pastCrossing))) && (! (turnLeft))))",
    "G ((s7) -> ((((drive) && (turnLeft)) && (! (indicateLeft))) && (! (pastCrossing))))",
    "G ((s8) -> ((((pastCrossing) && (! (drive))) && (! (indicateLeft))) && (! (turnLeft))))",
    "G ((! (s0)) || ((true) && (X (s1s2))))",
    "G ((! (s1s2)) || (((true) && (X (s3))) || ((true) && (X (s4)))))",
    "G ((! (s3)) || ((true) && (X (s5))))",
    "G ((! (s4)) || ((true) && (X (s6))))",
    "G ((! (s5)) || ((true) && (X (s8))))",
    "G ((! (s6)) || ((true) && (X (s7))))",
    "G ((! (s7)) || ((true) && (X (s8))))",
    "G ((! (s8)) || ((true) && (X (s8))))"
  ],
  "semantics" : "mealy",
  "inputs" : [
    "drive",
    "indicateLeft",
    "pastCrossing",
    "s0",
    "s1s2",
    "s3",
    "s4",
    "s5",
    "s6",
    "s7",
    "s8",
    "turnLeft"
  ],
  "guarantees" : [
    "F (go)",
    "(break) U ((((s4) || (s6)) || (s7)) || (s8))",
    "G ((go) <-> ((((s4) || (s6)) || (s7)) || (s8)))",
    "G ((go) -> (! (break)))"
  ]
}